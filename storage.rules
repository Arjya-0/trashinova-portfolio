rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is team member
    function isTeamMember() {
      return request.auth != null && 
             firestore.exists(/databases/(default)/documents/teamMembers/$(request.auth.uid));
    }
    
    // 3D Models - public read, team upload
    match /models/{modelFile} {
      allow read: if true;
      allow write: if isTeamMember() && 
                      request.resource.size < 100 * 1024 * 1024 && // 100MB limit
                      request.resource.contentType.matches('model/.*|application/octet-stream');
    }
    
    // Team photos - public read, team upload
    match /team/{photoFile} {
      allow read: if true;
      allow write: if isTeamMember() && 
                      request.resource.size < 5 * 1024 * 1024 && // 5MB limit
                      request.resource.contentType.matches('image/.*');
    }
    
    // Datasets - public read, team upload
    match /datasets/{dataFile} {
      allow read: if true;
      allow write: if isTeamMember() && 
                      request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }
    
    // Research PDFs - public read, team upload
    match /papers/{pdfFile} {
      allow read: if true;
      allow write: if isTeamMember() && 
                      request.resource.size < 20 * 1024 * 1024 && // 20MB limit
                      request.resource.contentType == 'application/pdf';
    }
    
    // Logo and site assets - public read, team upload
    match /assets/{assetFile} {
      allow read: if true;
      allow write: if isTeamMember() && 
                      request.resource.size < 5 * 1024 * 1024;
    }
  }
}